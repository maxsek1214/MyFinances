plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

ext {
    // app versioning
    verMajor = 1
    verMinor = 0
    verPatch = 0
    verBuild = 0

    // Room Persistence Library
    room_version = '2.4.0-alpha01'

    lifecycle_version = '2.3.1'
}

android {
    compileSdkVersion 30
    buildToolsVersion '31.0.0 rc2'

    // setting value for verBuild which is the incremented last value stored in the file
    def verPropsFile = file('version.properties')
    if (verPropsFile.canRead()) {
        Properties verProps = new Properties()
        verProps.load(new FileInputStream(verPropsFile))
        verBuild = (verProps['VERSION_BUILD'] ?: "0").toInteger() + 1
    } else {
        throw new GradleException("Couldn't read version.properties!")
    }

    // wrapping inside a method avoids auto incrementing on every gradle task
    ext.autoIncrementBuildNumber = {
        if (verPropsFile.canRead()) {
            Properties verProps = new Properties()
            verProps.load(new FileInputStream(verPropsFile))
            verBuild = (verProps['VERSION_BUILD'] ?: "0").toInteger() + 1
            verProps['VERSION_BUILD'] = verBuild.toString()
            verProps.store(verPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Couldn't read version.properties!")
        }
    }

    defaultConfig {
        applicationId "com.m.sekoshin.myfinances"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode verMajor * 1000 + verMinor * 100 + verPatch
        versionName "$verMajor.$verMinor.$verPatch.$verBuild"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // hook the check if the release/debug task is among the tasks to be executed
    gradle.taskGraph.whenReady {
        taskGraph ->
            if (taskGraph.hasTask(assembleDebug)) {
                autoIncrementBuildNumber()
            } else if (taskGraph.hasTask(assembleRelease)) {
                autoIncrementBuildNumber()
            }
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX
    implementation 'androidx.core:core-ktx:1.6.0-alpha02'
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-beta01'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Material Components
    implementation 'com.google.android.material:material:1.4.0-alpha02'

    // Room
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-migration:$room_version"
    implementation "androidx.room:room-runtime:$room_version"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3-alpha05'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0-alpha05'
}